name: Upload esmini artifacts
description: Upload esmini artifacts

runs:
  using: 'composite'

  steps:
    - name: Bundle Release artifacts - MacOS
      if: runner.os == 'macOS'
      shell: bash
      run: lipo -create bin/libesminiRMLib.dylib -output bin/esminiRMLib.bundle
        && lipo -create bin/libesminiLib.dylib -output bin/esminiLib.bundle

    - name: Make scripts and binaries runnable - Unix
      if: runner.os == 'macOS' || runner.os == 'Linux'
      shell: bash
      run: sudo chmod -R +x ./run/*
        && sudo chmod -R +x ./scripts/*

    - name: Copy Release artifacts to esmini prefix folder structure
      shell: bash
      run: >
        mkdir esmini &&
        tar -c -p
        bin/
        EnvironmentSimulator/Applications/odrplot/xodr.py
        EnvironmentSimulator/Libraries/esminiRMLib/esminiRMLib.hpp
        EnvironmentSimulator/Libraries/esminiRMLib/esminiRMWrapper.cs
        EnvironmentSimulator/Libraries/esminiRMLib/esminiRMUnityUtil.cs
        EnvironmentSimulator/Libraries/esminiLib/esminiLib.hpp
        EnvironmentSimulator/Libraries/esminiLib/ESMiniWrapper.cs
        version.txt
        | tar -p -C esmini -x

    - name: Upload release artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: esmini-bin_${{ runner.os }}
        path: esmini

    - name: Copy demo artifacts to esmini prefix folder structure
      shell: bash
      run: >
        ./scripts/generate_binary_dist.sh

    - name: Upload demo artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: esmini-demo_${{ runner.os }}
        path: esmini-demo
